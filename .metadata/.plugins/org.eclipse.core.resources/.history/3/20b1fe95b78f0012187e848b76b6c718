import java.util.ArrayList;

import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class BaseDimension extends JSlider implements ChangeListener {
	/** This class represents arbitrary dimension model.
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String name;
	private ArrayList<DimensionListener> dimensionListeners;
	private int from;
	private int to;
	
	public BaseDimension(String name, int from, int to, int initial) {
		super(0, 1000, (int)(1000.0*(to - initial)/(to - from)));
		System.out.println((int)(360.0*(to - initial)/(to - from)));
		setName(name);
		this.dimensionListeners = new ArrayList<DimensionListener>();
		this.addChangeListener(this);
		this.from = from;
		this.to = to;
	}
	
	public BaseDimension(String name, int from, int to) {
		this(name, from, to, (from + to)/2);
	}
	
	public BaseDimension(String name) {
		this(name, 0, 0);
	}
	
	public void setName(String name) { this.name = name; }
	public String getName() { return name; }
	
	public int getNumericValue() {
		return from + (int)((to - from)*getValue()/360.0);
	}
	
	@Override
	public void stateChanged(ChangeEvent e) { notifyDimensionListeners(); }
	
	protected void notifyDimensionListeners() {
		for(DimensionListener dimensionListener: dimensionListeners) {
			dimensionListener.dimensionChanged(this);
		}
	}
	
	public void addDimensionListener(DimensionListener dimensionListener) {
		dimensionListeners.add(dimensionListener);
	}
}
